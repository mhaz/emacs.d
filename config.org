#+STARTUP: overview
* repos
#+begin_src emacs-lisp
  (add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/") t)
#+end_src

* Aesthetics
** Disable menus and scrollbars
#+begin_src emacs-lisp
  (tool-bar-mode -1)
  (menu-bar-mode -1)
  (scroll-bar-mode -1)
#+end_src

** Theme and font
TODO: Change the color of the code blocks in Org Mode.
  #+begin_src emacs-lisp
    ;; (load-theme 'modus-operandi)
    (load-theme 'modus-vivendi)
    (define-key global-map (kbd "<C-f11>") #'modus-themes-toggle)

    (set-face-attribute 'default nil
                        :family "Iosevka"
                        :height 110
                        :weight 'regular
                        :width 'normal)
  #+end_src

** Increase space between lines
#+begin_src emacs-lisp
  (setq-default line-spacing 6)
#+end_src

** cursor location (line, column)
#+begin_src emacs-lisp
  (line-number-mode 1)
  (column-number-mode 1)
#+end_src

** Highlight current line
#+begin_src emacs-lisp
  ;; Doesn't work as intended, probably because Emacs start as a daemon.
  ;; (when window-system (add-hook 'prog-mode-hook 'hl-line-mode))
  (add-hook 'prog-mode-hook 'hl-line-mode)
#+end_src

* Better defaults
** Disable bell
#+begin_src emacs-lisp
  (setq ring-bell-function 'ignore)
#+end_src

** Set UTF-8 encoding
#+begin_src emacs-lisp
  (setq locale-coding-system 'utf-8)
  (set-terminal-coding-system 'utf-8)
  (set-keyboard-coding-system 'utf-8)
  (set-selection-coding-system 'utf-8)
  (prefer-coding-system 'utf-8)
#+end_src

** Change titlebar to current file path
#+begin_src emacs-lisp
  (setq frame-title-format
        '((buffer-file-name "%f" (dired-directory dired-directory "%b"))))
#+end_src

** Change yes-or-no questions into y-or-n questions
#+begin_src emacs-lisp
  (defalias 'yes-or-no-p 'y-or-n-p)
#+end_src

** Delete mode
Delete selected text when I start typing over it (default behavior in most GUIs)
#+begin_src emacs-lisp
  (delete-selection-mode 1)
#+end_src

** Show parens
#+begin_src emacs-lisp
  (show-paren-mode 1)
#+end_src

** Delete trailing whitespaces on save
Source: https://www.emacswiki.org/emacs/DeletingWhitespace
#+begin_src emacs-lisp
  (add-hook 'before-save-hook 'delete-trailing-whitespace)
#+end_src

** Fuzzy search with isearch (white space matching)
From "Emacs micro motion and hacks" by Protesilaos Stavrou
#+begin_src emacs-lisp
  (setq search-whitespace-regexp ".*")
  (setq isearch-lax-whitespace t)
  (setq isearch-rexexp-lax-whitespace nil)
  #+end_src

** Don't use tabs
#+begin_src emacs-lisp
  (setq-default indent-tabs-mode nil)
  #+end_src

** Smooth scrolling
Source: https://www.reddit.com/r/emacs/comments/41vicb/emacs_os_x_smooth_scroll/
https://www.reddit.com/r/emacs/comments/3kgv75/why_is_smooth_scrolling_so_slow/
#+begin_src emacs-lisp
  (setq scroll-conservatively 101) ;; move minimum when cursor exits view, instead of recentering
  (setq mouse-wheel-scroll-amount '(1)) ;; mouse scroll moves 1 line at a time, instead of 5 lines
  ;; (setq mouse-wheel-progressive-speed nil) ;; on a long mouse scroll keep scrolling by 1 lin
  (setq mouse-wheel-progressive-speed t)
#+end_src

** Keybindings
*** Visiting the configuration
Quickly edit =~/.emacs.d/config.org=
#+begin_src emacs-lisp
  (defun config-visit ()
    (interactive)
    (find-file "~/.emacs.d/config.org"))
  (global-set-key (kbd "C-c e") 'config-visit)
#+end_src

*** Reloading the configuration
Simply pressing =Control-c r= will reload this file, very handy.
You can also manually invoke =config-reload=.
#+begin_src emacs-lisp
  (defun config-reload ()
    "Reloads ~/.emacs.d/config.org at runtime"
    (interactive)
    (org-babel-load-file (expand-file-name "~/.emacs.d/config.org")))
  (global-set-key (kbd "C-c r") 'config-reload)
#+end_src

** Jump to matching pair
#+begin_src emacs-lisp
  (defun is-char-after-in-opening-brace ()
    (member (char-after) '(?\( ?\[ ?\{)))

  (defun is-char-before-in-closing-brace ()
    (member (char-before) '(?\) ?\] ?\})))

  (defun jump-to-matching-pair ()
    (interactive)
    (cond ((is-char-after-in-opening-brace)  (forward-sexp))
          ((is-char-before-in-closing-brace) (backward-sexp))
          (t (error "No matching pair found"))))

  (global-set-key (kbd "C-c j") 'jump-to-matching-pair)
#+end_src

** Emacs temporary files
Source: https://www.emacswiki.org/emacs/AutoSave#toc1
#+begin_src emacs-lisp
  (setq backup-directory-alist
        `(("." . ,(concat user-emacs-directory "backups"))))
#+end_src
